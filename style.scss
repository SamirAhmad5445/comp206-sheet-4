// ======================= sass modules import =======================
@use "sass:math" as *;
@use "sass:string" as *;

// ======================= abstracts =======================
$colors: (
  primary: hsl(210, 100%, 60%),
  neutral: hsl(187, 43%, 96%),
  accent: hsl(128, 50%, 55%),
  light: hsl(210, 100%, 100%),
  dark: hsl(187, 0%, 0%),
  muted: hsl(0, 0%, 30%),
);

$typescale: (
  sm: 0.75rem,
  md: 1rem,
  lg: 1.5rem,
  ex: 3rem,
);

$base-size: 1rem;

$sizes: (
  0: $base-size * 0.125,
  1: $base-size * 0.25,
  2: $base-size * 0.5,
  3: $base-size,
  4: $base-size * 1.5,
  5: $base-size * 2,
  6: $base-size * 3,
);

// ======================= mixins =======================
@mixin colorize($property) {
  @each $color, $value in $colors {
    &-#{$color} {
      #{$property}: var(--#{$color});
    }
  }
}

// ======================= global styles & reset =======================
:root {
  @each $name, $color in $colors {
    --#{$name}: #{$color};
  }
}

html {
  font-size: 100%;
  box-sizing: border-box;
  scroll-behavior: smooth;
}

body {
  line-height: 1.5;
  font-family: system-ui, -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto,
    Oxygen, Ubuntu, Cantarell, "Open Sans", "Helvetica Neue", sans-serif;
  background-color: var(--neutral);
  color: var(--dark);
}

*,
*::before,
*::after {
  margin: 0;
  padding: 0;
  box-sizing: inherit;
}

img {
  display: block;
  max-width: 100%;
}

input,
button {
  font: inherit;
}

p,
h1,
h2 {
  overflow-wrap: break-word;
}

button {
  cursor: pointer;
}

a {
  color: inherit;
  text-decoration: none;
}

[contenteditable] {
  display: inline-block;
  min-width: 2rem;
  letter-spacing: 0.125rem;
  outline: transparent;
  caret-color: var(--accent);
}

// ======================= layout classes =======================
.container {
  max-width: 62ch;
  margin-inline: auto;
  padding-inline: var(--container-padding, 1.5rem);
}

@for $i from 1 through 3 {
  .flow-#{$i} > * + * {
    margin-block-start: $i + rem;
  }
}

// ======================= utilities =======================
// typography utolities
$directions: start, center, end;

// alignment
@each $direction in $directions {
  .text-#{$direction} {
    text-align: $direction;
  }
}

// font-sizes
@each $scale, $value in $typescale {
  .text-#{$scale} {
    font-size: $value;
  }
}

// font-weights
@for $w from 3 to 8 {
  .fw-#{$w * 100} {
    font-weight: $w * 100;
  }
}

// colors & background-colors
.bg {
  @include colorize(background-color);
}
.text {
  @include colorize(color);
}

// spacing & borders
@each $number, $size in $sizes {
  .m-#{$number} {
    margin: $size;
  }

  .p-#{$number} {
    padding: $size;
  }

  .radius-#{$number} {
    border-radius: $size;
  }

  .border-#{$number} {
    border-width: $size;
  }
}

:where([class*="border"]) {
  border: 0.125rem solid var(--muted);
}

.border {
  @include colorize(border-color);

  &:is(&-none) {
    border: none;
  }
}

// ======================= components =======================
// buttons
.btn {
  --bg: var(--primary);
  --base: var(--neutral);

  background-color: var(--bg);
  color: var(--base);
  padding: 0.25rem 1.25rem;
  margin: 0.25rem;
  border: none;
  border-radius: 0.25rem;
  text-transform: capitalize;
  font-size: 1.125rem;

  @include colorize(--bg);

  &:is(:hover, :focus-visible) {
    opacity: 0.9;
  }
}

// form input
.form-input {
  --base: var(--dark);

  display: block;
  width: 100%;
  margin-block: 0.5rem;
  padding: 0.25rem 0.5rem;
  border: 0.0625rem solid var(--base);
  border-radius: 0.25rem;
  background-color: var(--light);
  color: var(--dark);
  caret-color: var(--base);

  @include colorize(--base);

  &:where([readonly]) {
    outline: transparent;
    opacity: 0.8;
    cursor: default;
  }
}
